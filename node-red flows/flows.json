[
    {
        "id": "9279e5f337aa9f20",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6bbd52dd6a3d0fcf",
        "type": "mqtt in",
        "z": "9279e5f337aa9f20",
        "name": "",
        "topic": "openTimings",
        "qos": "1",
        "datatype": "json",
        "broker": "1eab593d0e359f98",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 80,
        "wires": [
            [
                "2b56bc868dcc728c"
            ]
        ]
    },
    {
        "id": "3c95ed200ed9f121",
        "type": "mqtt out",
        "z": "9279e5f337aa9f20",
        "name": "",
        "topic": "carsNum",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "1eab593d0e359f98",
        "x": 280,
        "y": 420,
        "wires": []
    },
    {
        "id": "9c561c1824ed042c",
        "type": "inject",
        "z": "9279e5f337aa9f20",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 130,
        "y": 200,
        "wires": [
            [
                "d2740bfe09bf56cb"
            ]
        ]
    },
    {
        "id": "d2740bfe09bf56cb",
        "type": "function",
        "z": "9279e5f337aa9f20",
        "name": "function 1",
        "func": "msg.payload = true\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 200,
        "wires": [
            [
                "04145090b7f6ba40",
                "7e014a482f7f3376"
            ]
        ]
    },
    {
        "id": "04145090b7f6ba40",
        "type": "function",
        "z": "9279e5f337aa9f20",
        "name": "function 2",
        "func": "const wait = (ms) => {\n    var start = new Date().getTime();\n    var end = start\n    while (end<start + ms){\n        end = new Date().getTime();\n    }\n}\nlet greenTime = flow.get(\"greenTime\") * 1000\nif (typeof greenTime === \"number\"){\n    wait(greenTime)\n} else {\n    wait(45000)\n}\n\nmsg.payload = false\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 260,
        "wires": [
            [
                "13494d21798453b4",
                "7e014a482f7f3376"
            ]
        ]
    },
    {
        "id": "13494d21798453b4",
        "type": "function",
        "z": "9279e5f337aa9f20",
        "name": "function 3",
        "func": "msg.payload = true\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 300,
        "wires": [
            [
                "1c259fb027b668bc",
                "83eba7828fff1499"
            ]
        ]
    },
    {
        "id": "1c259fb027b668bc",
        "type": "function",
        "z": "9279e5f337aa9f20",
        "name": "function 4",
        "func": "const wait = (ms) => {\n    var start = new Date().getTime();\n    var end = start\n    while (end<start + ms){\n        end = new Date().getTime();\n    }\n}\nwait(5000)\nmsg.payload = false\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 340,
        "wires": [
            [
                "3edba8e09e321bb2",
                "83eba7828fff1499"
            ]
        ]
    },
    {
        "id": "3edba8e09e321bb2",
        "type": "function",
        "z": "9279e5f337aa9f20",
        "name": "function 5",
        "func": "msg.payload = true\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 380,
        "wires": [
            [
                "416de97f7bb4b8fe",
                "c0413dd657480247"
            ]
        ]
    },
    {
        "id": "416de97f7bb4b8fe",
        "type": "function",
        "z": "9279e5f337aa9f20",
        "name": "function 6",
        "func": "const wait = (ms) => {\n    var start = new Date().getTime();\n    var end = start\n    while (end<start + ms){\n        end = new Date().getTime();\n    }\n}\nlet redTime = 90 - (flow.get(\"greenTime\")*1000)\nif (typeof redTime === \"number\"){\n    wait(redTime)\n} else {\n    wait(45000)\n}\n\nmsg.payload = false\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 420,
        "wires": [
            [
                "d2740bfe09bf56cb",
                "c0413dd657480247"
            ]
        ]
    },
    {
        "id": "2b56bc868dcc728c",
        "type": "function",
        "z": "9279e5f337aa9f20",
        "name": "function 7",
        "func": "flow.set(\"greenTime\", msg.payload.cross1)\nmsg.payload = msg.payload.cross1\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "7e014a482f7f3376",
        "type": "arduino out",
        "z": "9279e5f337aa9f20",
        "name": "",
        "pin": "12",
        "state": "OUTPUT",
        "arduino": "c04ffac97b157441",
        "x": 560,
        "y": 220,
        "wires": []
    },
    {
        "id": "83eba7828fff1499",
        "type": "arduino out",
        "z": "9279e5f337aa9f20",
        "name": "",
        "pin": "10",
        "state": "OUTPUT",
        "arduino": "c04ffac97b157441",
        "x": 620,
        "y": 280,
        "wires": []
    },
    {
        "id": "c0413dd657480247",
        "type": "arduino out",
        "z": "9279e5f337aa9f20",
        "name": "",
        "pin": "9",
        "state": "OUTPUT",
        "arduino": "c04ffac97b157441",
        "x": 670,
        "y": 380,
        "wires": []
    },
    {
        "id": "1eab593d0e359f98",
        "type": "mqtt-broker",
        "name": "hivemqBroker",
        "broker": "6a37b76a917148c095bbd12ab6d7a200.s1.eu.hivemq.cloud",
        "port": "8883",
        "tls": "c9dd9a1d50365c7b",
        "clientid": "",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "c04ffac97b157441",
        "type": "arduino-board",
        "device": "COM5"
    },
    {
        "id": "c9dd9a1d50365c7b",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "isrgrootx1.pem",
        "servername": "",
        "verifyservercert": true,
        "alpnprotocol": ""
    }
]